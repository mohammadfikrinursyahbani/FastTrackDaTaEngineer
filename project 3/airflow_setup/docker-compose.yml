version: '3.4'

services:
  postgres:
    image: docker.io/postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - /home/de-fikri/de-series/mini_project_3/postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5

  scheduler:
    image: localhost/my-airflow
    user: "${AIRFLOW_UID}:0"
    env_file:
      - .env
    volumes:
      - /home/de-fikri/de-series/mini_project_3/dags:/opt/airflow/dags
      - /home/de-fikri/de-series/mini_project_3/logs:/opt/airflow/logs
      - /home/de-fikri/de-series/mini_project_3/plugins:/opt/airflow/plugins
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"

  webserver:
    image: localhost/my-airflow
    user: "${AIRFLOW_UID}:0"
    env_file:
      - .env
    volumes:
      - /home/de-fikri/de-series/mini_project_3/dags:/opt/airflow/dags
      - /home/de-fikri/de-series/mini_project_3/logs:/opt/airflow/logs
      - /home/de-fikri/de-series/mini_project_3/plugins:/opt/airflow/plugins
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    container_name: airflow-webserver
    restart: always
    command: >
      bash -c "sed -i 's|base_url =.*|base_url = https://dev-fikri.my.id/airflow|' /opt/airflow/airflow.cfg &&
               sed -i 's|enable_proxy_fix =.*|enable_proxy_fix = True|' /opt/airflow/airflow.cfg &&
               airflow webserver"
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5

  airflow-init:
    image: localhost/my-airflow
    user: "${AIRFLOW_UID}:0"
    env_file:
      - .env
    environment:
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD}
    volumes:
      - /home/de-fikri/de-series/mini_project_3/dags:/opt/airflow/dags
      - /home/de-fikri/de-series/mini_project_3/logs:/opt/airflow/logs
      - /home/de-fikri/de-series/mini_project_3/plugins:/opt/airflow/plugins
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /opt/airflow/logs /opt/airflow/dags /opt/airflow/plugins
        chown -R "${AIRFLOW_UID}:0" /opt/airflow/{logs,dags,plugins}
        # Initialize the database for Airflow
        exec /entrypoint airflow db migrate
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data: